// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace TestCodedUI
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// LogIn - Use 'LogInParams' to pass parameters into this method.
        /// </summary>
        public void LogIn()
        {
            #region Variable Declarations
            HtmlEdit uITxtUsernameEdit = this.UIHttplocalhost1351LogWindow.UILoginDocument.UITxtUsernameEdit;
            HtmlEdit uITxtPasswordEdit = this.UIHttplocalhost1351LogWindow.UILoginDocument.UITxtPasswordEdit;
            HtmlInputButton uILoginButton = this.UIHttplocalhost1351LogWindow.UILoginDocument.UILoginButton;
            #endregion

            // Type 'name@mail.com' in 'txtUsername' text box
            uITxtUsernameEdit.Text = this.LogInParams.UITxtUsernameEditText;

            // Type '{Tab}' in 'txtUsername' text box
            Keyboard.SendKeys(uITxtUsernameEdit, this.LogInParams.UITxtUsernameEditSendKeys, ModifierKeys.None);

            // Type '********' in 'txtPassword' text box
            uITxtPasswordEdit.Password = this.LogInParams.UITxtPasswordEditPassword;

            // Click 'Login' button
            Mouse.Click(uILoginButton, new Point(34, 17));
        }
        
        /// <summary>
        /// RedirectToNewWork
        /// </summary>
        public void RedirectToNewWork()
        {
            #region Variable Declarations
            HtmlInputButton uIAddNewWorkButton = this.UIProfileviewInternetEWindow.UIProfileviewDocument.UIAddNewWorkButton;
            #endregion

            // Click 'Add New Work' button
            Mouse.Click(uIAddNewWorkButton, new Point(32, 14));
        }
        
        /// <summary>
        /// AddNewWorkDB - Use 'AddNewWorkDBParams' to pass parameters into this method.
        /// </summary>
        public void AddNewWorkDB()
        {
            #region Variable Declarations
            HtmlEdit uITxtTitleEdit = this.UIAddNewWorkInternetExWindow.UIAddNewWorkDocument.UITxtTitleEdit;
            HtmlEdit uITxtDateEdit = this.UIAddNewWorkInternetExWindow.UIAddNewWorkDocument.UITxtDateEdit;
            HtmlInputButton uISaveButton = this.UIAddNewWorkInternetExWindow.UIAddNewWorkDocument.UISaveButton;
            #endregion

            // Type 'work123' in 'txtTitle' text box
            uITxtTitleEdit.Text = this.AddNewWorkDBParams.UITxtTitleEditText;

            // Type '{Tab}' in 'txtTitle' text box
            Keyboard.SendKeys(uITxtTitleEdit, this.AddNewWorkDBParams.UITxtTitleEditSendKeys, ModifierKeys.None);

            // Type '12.07.2009' in 'txtDate' text box
            uITxtDateEdit.Text = this.AddNewWorkDBParams.UITxtDateEditText;

            // Click 'Save' button
            Mouse.Click(uISaveButton, new Point(20, 20));
        }
        
        /// <summary>
        /// DeleteWork
        /// </summary>
        public void DeleteWork()
        {
            #region Variable Declarations
            HtmlHyperlink uIDeleteHyperlink = this.UIProfileviewInternetEWindow.UIProfileviewDocument.UIDeleteHyperlink;
            #endregion

            // Click 'Delete' link
            Mouse.Click(uIDeleteHyperlink, new Point(16, 12));
        }
        
        /// <summary>
        /// RedirectToExistingWork
        /// </summary>
        public void RedirectToExistingWork()
        {
            #region Variable Declarations
            HtmlInputButton uIAddExistingWorkButton = this.UIProfileviewInternetEWindow.UIProfileviewDocument.UIAddExistingWorkButton;
            #endregion

            // Click 'Add Existing Work' button
            Mouse.Click(uIAddExistingWorkButton, new Point(99, 12));
        }
        
        /// <summary>
        /// AddExistingWork
        /// </summary>
        public void AddExistingWork()
        {
            #region Variable Declarations
            HtmlHyperlink uIAddHyperlink = this.UIAddExistingWorkInterWindow.UIAddExistingWorkDocument.UIAddHyperlink;
            #endregion

            // Click 'Add' link
            Mouse.Click(uIAddHyperlink, new Point(14, 8));
        }
        
        #region Properties
        public virtual LogInParams LogInParams
        {
            get
            {
                if ((this.mLogInParams == null))
                {
                    this.mLogInParams = new LogInParams();
                }
                return this.mLogInParams;
            }
        }
        
        public virtual AddNewWorkDBParams AddNewWorkDBParams
        {
            get
            {
                if ((this.mAddNewWorkDBParams == null))
                {
                    this.mAddNewWorkDBParams = new AddNewWorkDBParams();
                }
                return this.mAddNewWorkDBParams;
            }
        }
        
        public UIHttplocalhost1351LogWindow UIHttplocalhost1351LogWindow
        {
            get
            {
                if ((this.mUIHttplocalhost1351LogWindow == null))
                {
                    this.mUIHttplocalhost1351LogWindow = new UIHttplocalhost1351LogWindow();
                }
                return this.mUIHttplocalhost1351LogWindow;
            }
        }
        
        public UIProfileviewInternetEWindow UIProfileviewInternetEWindow
        {
            get
            {
                if ((this.mUIProfileviewInternetEWindow == null))
                {
                    this.mUIProfileviewInternetEWindow = new UIProfileviewInternetEWindow();
                }
                return this.mUIProfileviewInternetEWindow;
            }
        }
        
        public UIAddNewWorkInternetExWindow UIAddNewWorkInternetExWindow
        {
            get
            {
                if ((this.mUIAddNewWorkInternetExWindow == null))
                {
                    this.mUIAddNewWorkInternetExWindow = new UIAddNewWorkInternetExWindow();
                }
                return this.mUIAddNewWorkInternetExWindow;
            }
        }
        
        public UIAddExistingWorkInterWindow UIAddExistingWorkInterWindow
        {
            get
            {
                if ((this.mUIAddExistingWorkInterWindow == null))
                {
                    this.mUIAddExistingWorkInterWindow = new UIAddExistingWorkInterWindow();
                }
                return this.mUIAddExistingWorkInterWindow;
            }
        }
        #endregion
        
        #region Fields
        private LogInParams mLogInParams;
        
        private AddNewWorkDBParams mAddNewWorkDBParams;
        
        private UIHttplocalhost1351LogWindow mUIHttplocalhost1351LogWindow;
        
        private UIProfileviewInternetEWindow mUIProfileviewInternetEWindow;
        
        private UIAddNewWorkInternetExWindow mUIAddNewWorkInternetExWindow;
        
        private UIAddExistingWorkInterWindow mUIAddExistingWorkInterWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'LogIn'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class LogInParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'name@mail.com' in 'txtUsername' text box
        /// </summary>
        public string UITxtUsernameEditText = "name@mail.com";
        
        /// <summary>
        /// Type '{Tab}' in 'txtUsername' text box
        /// </summary>
        public string UITxtUsernameEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '********' in 'txtPassword' text box
        /// </summary>
        public string UITxtPasswordEditPassword = "A2RcPsxsl5ATiwB7aYvPzVij3YOpp1Qx";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AddNewWorkDB'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class AddNewWorkDBParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'work123' in 'txtTitle' text box
        /// </summary>
        public string UITxtTitleEditText = "work123";
        
        /// <summary>
        /// Type '{Tab}' in 'txtTitle' text box
        /// </summary>
        public string UITxtTitleEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '12.07.2009' in 'txtDate' text box
        /// </summary>
        public string UITxtDateEditText = "12.07.2009";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIHttplocalhost1351LogWindow : BrowserWindow
    {
        
        public UIHttplocalhost1351LogWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "http://localhost:1351/ - Login";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("http://localhost:1351/ - Login");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UILoginDocument UILoginDocument
        {
            get
            {
                if ((this.mUILoginDocument == null))
                {
                    this.mUILoginDocument = new UILoginDocument(this);
                }
                return this.mUILoginDocument;
            }
        }
        #endregion
        
        #region Fields
        private UILoginDocument mUILoginDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UILoginDocument : HtmlDocument
    {
        
        public UILoginDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Login";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/LoginForm.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:1351/LoginForm.aspx";
            this.WindowTitles.Add("http://localhost:1351/ - Login");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UITxtUsernameEdit
        {
            get
            {
                if ((this.mUITxtUsernameEdit == null))
                {
                    this.mUITxtUsernameEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUITxtUsernameEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "txtUsername";
                    this.mUITxtUsernameEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "txtUsername";
                    this.mUITxtUsernameEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUITxtUsernameEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUITxtUsernameEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUITxtUsernameEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUITxtUsernameEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"txtUsername\" id=\"txtUsername\" styl";
                    this.mUITxtUsernameEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "5";
                    this.mUITxtUsernameEdit.WindowTitles.Add("http://localhost:1351/ - Login");
                    #endregion
                }
                return this.mUITxtUsernameEdit;
            }
        }
        
        public HtmlEdit UITxtPasswordEdit
        {
            get
            {
                if ((this.mUITxtPasswordEdit == null))
                {
                    this.mUITxtPasswordEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUITxtPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "txtPassword";
                    this.mUITxtPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "txtPassword";
                    this.mUITxtPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUITxtPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "PASSWORD";
                    this.mUITxtPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUITxtPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUITxtPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"txtPassword\" id=\"txtPassword\" styl";
                    this.mUITxtPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "6";
                    this.mUITxtPasswordEdit.WindowTitles.Add("http://localhost:1351/ - Login");
                    #endregion
                }
                return this.mUITxtPasswordEdit;
            }
        }
        
        public HtmlInputButton UILoginButton
        {
            get
            {
                if ((this.mUILoginButton == null))
                {
                    this.mUILoginButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.Id] = "btnLogin";
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.Name] = "btnLogin";
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = "Login";
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.Class] = null;
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "name=\"btnLogin\" id=\"btnLogin\" onclick=\'j";
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "7";
                    this.mUILoginButton.WindowTitles.Add("http://localhost:1351/ - Login");
                    #endregion
                }
                return this.mUILoginButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUITxtUsernameEdit;
        
        private HtmlEdit mUITxtPasswordEdit;
        
        private HtmlInputButton mUILoginButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIProfileviewInternetEWindow : BrowserWindow
    {
        
        public UIProfileviewInternetEWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Profile view";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Profile view");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIProfileviewDocument UIProfileviewDocument
        {
            get
            {
                if ((this.mUIProfileviewDocument == null))
                {
                    this.mUIProfileviewDocument = new UIProfileviewDocument(this);
                }
                return this.mUIProfileviewDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIProfileviewDocument mUIProfileviewDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIProfileviewDocument : HtmlDocument
    {
        
        public UIProfileviewDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Profile view";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/ProfileView.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:1351/ProfileView.aspx";
            this.WindowTitles.Add("Profile view");
            #endregion
        }
        
        #region Properties
        public HtmlInputButton UIAddNewWorkButton
        {
            get
            {
                if ((this.mUIAddNewWorkButton == null))
                {
                    this.mUIAddNewWorkButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUIAddNewWorkButton.SearchProperties[HtmlButton.PropertyNames.Id] = "btnAddNewWork";
                    this.mUIAddNewWorkButton.SearchProperties[HtmlButton.PropertyNames.Name] = "btnAddNewWork";
                    this.mUIAddNewWorkButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = "Add New Work";
                    this.mUIAddNewWorkButton.FilterProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUIAddNewWorkButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIAddNewWorkButton.FilterProperties[HtmlButton.PropertyNames.Class] = null;
                    this.mUIAddNewWorkButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "name=\"btnAddNewWork\" id=\"btnAddNewWork\" ";
                    this.mUIAddNewWorkButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "5";
                    this.mUIAddNewWorkButton.WindowTitles.Add("Profile view");
                    #endregion
                }
                return this.mUIAddNewWorkButton;
            }
        }
        
        public HtmlHyperlink UIDeleteHyperlink
        {
            get
            {
                if ((this.mUIDeleteHyperlink == null))
                {
                    this.mUIDeleteHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIDeleteHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "gvWorks_linkBtnDelete_2";
                    this.mUIDeleteHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIDeleteHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIDeleteHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Delete";
                    this.mUIDeleteHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "__doPostBack(\'gvWorks$ctl04$linkBtnDelete\',\'\')";
                    this.mUIDeleteHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIDeleteHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:__doPostBack(\'gvWorks$ctl04$linkBtnDelete\',\'\')";
                    this.mUIDeleteHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIDeleteHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=\"gvWorks_linkBtnDelete_2\" href=\"javas";
                    this.mUIDeleteHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "3";
                    this.mUIDeleteHyperlink.WindowTitles.Add("Profile view");
                    #endregion
                }
                return this.mUIDeleteHyperlink;
            }
        }
        
        public HtmlInputButton UIAddExistingWorkButton
        {
            get
            {
                if ((this.mUIAddExistingWorkButton == null))
                {
                    this.mUIAddExistingWorkButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUIAddExistingWorkButton.SearchProperties[HtmlButton.PropertyNames.Id] = "btnAddExistingWork";
                    this.mUIAddExistingWorkButton.SearchProperties[HtmlButton.PropertyNames.Name] = "btnAddExistingWork";
                    this.mUIAddExistingWorkButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = "Add Existing Work";
                    this.mUIAddExistingWorkButton.FilterProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUIAddExistingWorkButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIAddExistingWorkButton.FilterProperties[HtmlButton.PropertyNames.Class] = null;
                    this.mUIAddExistingWorkButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "name=\"btnAddExistingWork\" id=\"btnAddExis";
                    this.mUIAddExistingWorkButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "6";
                    this.mUIAddExistingWorkButton.WindowTitles.Add("Profile view");
                    #endregion
                }
                return this.mUIAddExistingWorkButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlInputButton mUIAddNewWorkButton;
        
        private HtmlHyperlink mUIDeleteHyperlink;
        
        private HtmlInputButton mUIAddExistingWorkButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIAddNewWorkInternetExWindow : BrowserWindow
    {
        
        public UIAddNewWorkInternetExWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Add New Work";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Add New Work");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIAddNewWorkDocument UIAddNewWorkDocument
        {
            get
            {
                if ((this.mUIAddNewWorkDocument == null))
                {
                    this.mUIAddNewWorkDocument = new UIAddNewWorkDocument(this);
                }
                return this.mUIAddNewWorkDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIAddNewWorkDocument mUIAddNewWorkDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIAddNewWorkDocument : HtmlDocument
    {
        
        public UIAddNewWorkDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Add New Work";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/AddNewWork.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:1351/AddNewWork.aspx";
            this.WindowTitles.Add("Add New Work");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UITxtTitleEdit
        {
            get
            {
                if ((this.mUITxtTitleEdit == null))
                {
                    this.mUITxtTitleEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUITxtTitleEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "txtTitle";
                    this.mUITxtTitleEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "txtTitle";
                    this.mUITxtTitleEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUITxtTitleEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUITxtTitleEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUITxtTitleEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUITxtTitleEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"txtTitle\" id=\"txtTitle\" style=\"wid";
                    this.mUITxtTitleEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "3";
                    this.mUITxtTitleEdit.WindowTitles.Add("Add New Work");
                    #endregion
                }
                return this.mUITxtTitleEdit;
            }
        }
        
        public HtmlEdit UITxtDateEdit
        {
            get
            {
                if ((this.mUITxtDateEdit == null))
                {
                    this.mUITxtDateEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUITxtDateEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "txtDate";
                    this.mUITxtDateEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "txtDate";
                    this.mUITxtDateEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUITxtDateEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUITxtDateEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUITxtDateEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUITxtDateEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"txtDate\" id=\"txtDate\" style=\"width";
                    this.mUITxtDateEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "4";
                    this.mUITxtDateEdit.WindowTitles.Add("Add New Work");
                    #endregion
                }
                return this.mUITxtDateEdit;
            }
        }
        
        public HtmlInputButton UISaveButton
        {
            get
            {
                if ((this.mUISaveButton == null))
                {
                    this.mUISaveButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUISaveButton.SearchProperties[HtmlButton.PropertyNames.Id] = "btnSave";
                    this.mUISaveButton.SearchProperties[HtmlButton.PropertyNames.Name] = "btnSave";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = "Save";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.Class] = null;
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "name=\"btnSave\" id=\"btnSave\" type=\"submit";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "5";
                    this.mUISaveButton.WindowTitles.Add("Add New Work");
                    #endregion
                }
                return this.mUISaveButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUITxtTitleEdit;
        
        private HtmlEdit mUITxtDateEdit;
        
        private HtmlInputButton mUISaveButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIAddExistingWorkInterWindow : BrowserWindow
    {
        
        public UIAddExistingWorkInterWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Add Existing Work";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Add Existing Work");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIAddExistingWorkDocument UIAddExistingWorkDocument
        {
            get
            {
                if ((this.mUIAddExistingWorkDocument == null))
                {
                    this.mUIAddExistingWorkDocument = new UIAddExistingWorkDocument(this);
                }
                return this.mUIAddExistingWorkDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIAddExistingWorkDocument mUIAddExistingWorkDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIAddExistingWorkDocument : HtmlDocument
    {
        
        public UIAddExistingWorkDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Add Existing Work";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/AddExistingWork.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:1351/AddExistingWork.aspx";
            this.WindowTitles.Add("Add Existing Work");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIAddHyperlink
        {
            get
            {
                if ((this.mUIAddHyperlink == null))
                {
                    this.mUIAddHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIAddHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "gvAllWorks_linkBtnAdd_8";
                    this.mUIAddHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIAddHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIAddHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Add";
                    this.mUIAddHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "__doPostBack(\'gvAllWorks$ctl10$linkBtnAdd\',\'\')";
                    this.mUIAddHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIAddHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:__doPostBack(\'gvAllWorks$ctl10$linkBtnAdd\',\'\')";
                    this.mUIAddHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIAddHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=\"gvAllWorks_linkBtnAdd_8\" href=\"javas";
                    this.mUIAddHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "9";
                    this.mUIAddHyperlink.WindowTitles.Add("Add Existing Work");
                    #endregion
                }
                return this.mUIAddHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIAddHyperlink;
        #endregion
    }
}
